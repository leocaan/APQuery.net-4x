// <auto-generated />
namespace QueryFramework.Internal
{
	using System.Globalization;
	using System.Reflection;
	using System.Resources;

	/// <summary>
	///	This API supports the QueryFramework infrastructure and is not intended to be used
	///	directly from your code. This API may change or be removed in future releases.
	/// </summary>
	public static class SqlServerStrings
	{
		private static readonly ResourceManager _resourceManager
			= new ResourceManager("QueryFramework.SqlServer.Properties.SqlServerStrings", typeof(SqlServerStrings).GetTypeInfo().Assembly);

		/// <summary>
		/// Data type '{dataType}' is not supported in this form. Either specify the length explicitly in the type name, for example as '{dataType}(16)', or remove the data type and use APIs such as HasMaxLength to allow EF choose the data type.
		/// </summary>
		public static string Mapping_UnqualifiedDataType(object dataType)
		{
			return string.Format(CultureInfo.CurrentCulture, GetString("Mapping_UnqualifiedDataType", "dataType"), dataType);
		}

		private static string GetString(string name, params string[] formatterNames)
		{
			var value = _resourceManager.GetString(name);

			if (formatterNames != null)
			{
				for (var i = 0; i < formatterNames.Length; i++)
				{
					value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
				}
			}

			return value;
		}
	}
}
